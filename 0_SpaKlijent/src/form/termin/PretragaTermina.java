/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form.termin;

import controller.ClientController;
import domain.Klijent;
import domain.Termin;
import domain.Usluga;
import domain.Vaucer;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import models.termini.TableModelTermini;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author Ivana
 */
public class PretragaTermina extends javax.swing.JFrame {

    private TableModelTermini tableModel;

    /**
     * Creates new form PretragaTermina
     */
    public PretragaTermina() {
        try {
            initComponents();

            setLocationRelativeTo(null);
            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            tableModel = new TableModelTermini();
            tblTermina.setModel(tableModel);
            ucitajTermine();

            ClientController.getInstance().setPt(this);
        } catch (Exception ex) {
            Logger.getLogger(PretragaTermina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnPretrazi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTermina = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        btnDetalji = new javax.swing.JButton();
        pnlDetalji = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dcDatum1 = new com.toedter.calendar.JDateChooser();
        txtSati1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMinuti1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        brojProstorije = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        txtKlijent = new javax.swing.JTextField();
        txtUsluga = new javax.swing.JTextField();
        txtVaucer = new javax.swing.JTextField();
        dcDatum = new com.toedter.calendar.JDateChooser();
        txtSati = new javax.swing.JTextField();
        txtMinuti = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pretraga termina");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Datum i vreme:");

        btnPretrazi.setBackground(new java.awt.Color(153, 153, 255));
        btnPretrazi.setForeground(new java.awt.Color(255, 255, 255));
        btnPretrazi.setText("Pretrazi ");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        tblTermina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTermina);

        btnObrisi.setBackground(new java.awt.Color(255, 102, 102));
        btnObrisi.setForeground(new java.awt.Color(255, 255, 255));
        btnObrisi.setText("Obrisi termin");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnDetalji.setBackground(new java.awt.Color(153, 153, 255));
        btnDetalji.setForeground(new java.awt.Color(255, 255, 255));
        btnDetalji.setText("Detalji termina");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        pnlDetalji.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalji"));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Klijent:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Datum:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Usluga:");

        dcDatum1.setEnabled(false);

        txtSati1.setEnabled(false);

        jLabel9.setText(":");
        jLabel9.setEnabled(false);

        txtMinuti1.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Vreme:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Broj prostorije:");

        brojProstorije.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Vaucer:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Napomena:");

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        txtNapomena.setEnabled(false);
        jScrollPane1.setViewportView(txtNapomena);

        txtKlijent.setEnabled(false);

        txtUsluga.setEnabled(false);

        txtVaucer.setEnabled(false);

        javax.swing.GroupLayout pnlDetaljiLayout = new javax.swing.GroupLayout(pnlDetalji);
        pnlDetalji.setLayout(pnlDetaljiLayout);
        pnlDetaljiLayout.setHorizontalGroup(
            pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDetaljiLayout.createSequentialGroup()
                        .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(txtUsluga))
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(dcDatum1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(26, 26, 26)
                                .addComponent(txtVaucer))
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(21, 21, 21)
                                .addComponent(txtSati1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMinuti1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(brojProstorije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlDetaljiLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDetaljiLayout.setVerticalGroup(
            pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetaljiLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSati1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinuti1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel10)
                        .addComponent(txtKlijent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(brojProstorije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsluga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtVaucer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(pnlDetaljiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel7.setText(":");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnObrisi)
                                .addGap(111, 111, 111)
                                .addComponent(btnDetalji))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSati, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMinuti, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnPretrazi)))
                        .addGap(0, 97, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2)))
                .addGap(18, 18, 18)
                .addComponent(pnlDetalji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnPretrazi)
                                .addComponent(txtMinuti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(txtSati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(dcDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(pnlDetalji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDetalji)
                    .addComponent(btnObrisi))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        if (dcDatum.getDate() == null || txtSati.getText().isEmpty() || txtMinuti.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Unesite datum i vreme za pretragu termina");
            return;
        }

        try {
            Date datum = dcDatum.getDate();

            int sati = Integer.parseInt(txtSati.getText());
            int minuti = Integer.parseInt(txtMinuti.getText());

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(datum);
            calendar.set(Calendar.HOUR_OF_DAY, sati);
            calendar.set(Calendar.MINUTE, minuti);
            calendar.set(Calendar.SECOND, 0);
            calendar.set(Calendar.MILLISECOND, 0);

            Timestamp timestamp = new Timestamp(calendar.getTimeInMillis());

            List<Termin> lista = ClientController.getInstance().getListTermin(timestamp);

            if (lista.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da nadje zakazane termine po zadatom kriterijumu. Pokušajte ponovo!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }

            System.out.println(lista);
            tableModel.setTermini(lista);
            tableModel.fireTableDataChanged();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nadje zakazane termine po zadatom kriterijumu. Pokušajte ponovo!", "Greška", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da nadje zakazane termine po zadatom kriterijumu. Pokušajte ponovo!", "Greška", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        TableModelTermini tmt = (TableModelTermini) tblTermina.getModel();
        int red = tblTermina.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Molim Vas selektujte red!");
        } else {
            int modelRed = tblTermina.convertRowIndexToModel(red);
            Termin termin = tmt.vratiNaOsnovuReda(modelRed);

            try {
                controller.ClientController.getInstance().deleteTermin(termin);
                JOptionPane.showMessageDialog(this, "Sistem je uspešno obrisao termin.");
                tmt.getTermini().remove(termin);
                tmt.fireTableRowsDeleted(modelRed, modelRed);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da obriše termin. Pokušajte ponovo!", "Greška", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed
        try {
            TableModelTermini tmt = (TableModelTermini) tblTermina.getModel();
            int red = tblTermina.getSelectedRow();

            if (red == -1) {
                JOptionPane.showMessageDialog(this, "Molim Vas selektujte red!");
            } else {

                int modelRed = tblTermina.convertRowIndexToModel(red);

                Termin termin = tmt.vratiNaOsnovuReda(modelRed);
                JOptionPane.showMessageDialog(this, "Sistem je učitao termin!");

                Klijent selectedKlijent = termin.getKlijent();
                System.out.println(selectedKlijent);
                txtKlijent.setText(selectedKlijent.getIme() + " " + selectedKlijent.getPrezime());

                Usluga selectedUsluga = termin.getUsluga();
                System.out.println(selectedUsluga);
                txtUsluga.setText(selectedUsluga.getNazivUsluge());

                txtVaucer.setText(termin.getVaucer().toString());

                dcDatum1.setDate(termin.getDatumVremeTermina());
                txtSati1.setText(String.valueOf(termin.getDatumVremeTermina().getHours()));
                txtMinuti1.setText(String.valueOf(termin.getDatumVremeTermina().getMinutes()));
                brojProstorije.setValue(termin.getBrojProstorije());
                txtNapomena.setText(termin.getNapomena());

            }
        } catch (Exception ex) {
            Logger.getLogger(PretragaTermina.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita odabrani termin. Pokušajte ponovo", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner brojProstorije;
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretrazi;
    private com.toedter.calendar.JDateChooser dcDatum;
    private com.toedter.calendar.JDateChooser dcDatum1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlDetalji;
    private javax.swing.JTable tblTermina;
    private javax.swing.JTextField txtKlijent;
    private javax.swing.JTextField txtMinuti;
    private javax.swing.JTextField txtMinuti1;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtSati;
    private javax.swing.JTextField txtSati1;
    private javax.swing.JTextField txtUsluga;
    private javax.swing.JTextField txtVaucer;
    // End of variables declaration//GEN-END:variables

    public void ucitajTermine() {
        try {
            List<Termin> termini = ClientController.getInstance().getListTermin();

            List<Klijent> sviKlijenti = ClientController.getInstance().getListKlijent();
            List<Usluga> sveUsluge = ClientController.getInstance().getListUsluga();

            for (Termin termin : termini) {
                Long sifraKlijenta = termin.getKlijent().getSifraKlijenta();
                for (Klijent klijent : sviKlijenti) {
                    if (klijent.getSifraKlijenta().equals(sifraKlijenta)) {
                        termin.setKlijent(klijent);
                        break;
                    }
                }

                Long sifraUsluge = termin.getUsluga().getSifraUsluge();
                for (Usluga usluga : sveUsluge) {
                    if (usluga.getSifraUsluge().equals(sifraUsluge)) {
                        termin.setUsluga(usluga);
                        break;
                    }
                }
            }

            tableModel.setTermini(termini);
            System.out.println(termini);
            tableModel.fireTableDataChanged();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita termine.", "Greška", JOptionPane.ERROR_MESSAGE);
        }
    }

}
